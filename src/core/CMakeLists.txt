add_library(core STATIC
    gltf/gltf.h
    gltf/gltf_container.cpp
    gltf/gltf_container.h
    gltf/json_helpers.hpp
    gltf/simdjson.h
    path_tracer_hw/vulkan_path_tracer_hw.cpp
    path_tracer_hw/vulkan_path_tracer_hw.h
    rasterizer/vulkan_rasterizer.cpp
    rasterizer/vulkan_rasterizer.h
    scene.cpp
    scene.h
    shaders/scene_glsl.h
    vulkan/host_glsl_shared.h
    vulkan/vulkan_accel_structure.cpp
    vulkan/vulkan_accel_structure.h
    vulkan/vulkan_allocator.cpp
    vulkan/vulkan_allocator.h
    vulkan/vulkan_buffer.cpp
    vulkan/vulkan_buffer.h
    vulkan/vulkan_context.cpp
    vulkan/vulkan_context.h
    vulkan/vulkan_descriptor_sets.cpp
    vulkan/vulkan_descriptor_sets.h
    vulkan/vulkan_device.cpp
    vulkan/vulkan_device.h
    vulkan/vulkan_frames_in_flight.hpp
    vulkan/vulkan_graphics_pipeline.cpp
    vulkan/vulkan_graphics_pipeline.h
    vulkan/vulkan_helpers.cpp
    vulkan/vulkan_helpers.hpp
    vulkan/vulkan_pipeline.cpp
    vulkan/vulkan_pipeline.h
    vulkan/vulkan_raytracing_pipeline.cpp
    vulkan/vulkan_raytracing_pipeline.h
    vulkan/vulkan_shader.cpp
    vulkan/vulkan_shader.h
    vulkan/vulkan_swapchain.cpp
    vulkan/vulkan_swapchain.h
    vulkan/vulkan_texture.cpp
    vulkan/vulkan_texture.h
    vulkan_renderer.cpp
    vulkan_renderer.h
)
target_shaders(core
    path_tracer_hw/shaders/raytrace.rchit
    path_tracer_hw/shaders/raytrace.rgen
    path_tracer_hw/shaders/raytrace.rmiss
    rasterizer/shaders/rasterizer.frag
    rasterizer/shaders/rasterizer.vert
    shaders/postprocessing.frag
    shaders/postprocessing.vert
)

target_link_libraries(core PUBLIC common boost glm::glm simdjson spdlog Vulkan::Vulkan VulkanMemoryAllocator)
target_link_libraries(core PRIVATE base64 cityhash stb_image)
